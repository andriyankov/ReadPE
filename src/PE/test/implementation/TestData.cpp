#include "std.hpp"


static uint8_t incompleteDosHeader[] = {
    0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00
};
static const size_t szIncompleteDosHeader = 
    sizeof(incompleteDosHeader) / sizeof(incompleteDosHeader[0]);


static uint8_t with22SectionsImg32[] = {
    0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00,
    0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD,
    0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68,
    0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72,
    0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E,
    0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20,
    0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A,
    0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x32, 0xD6, 0x63, 0x02, 0x76, 0xB7, 0x0D, 0x51,
    0x76, 0xB7, 0x0D, 0x51, 0x76, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x8E, 0x51, 0x00, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x9E, 0x51, 0x7B, 0xB7, 0x0D, 0x51,
    0x76, 0xB7, 0x0C, 0x51, 0xE0, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x98, 0x51, 0x25, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x84, 0x51, 0x3D, 0xB4, 0x0D, 0x51,
    0x7F, 0xCF, 0x89, 0x51, 0x6D, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x9F, 0x51, 0x77, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x99, 0x51, 0x77, 0xB7, 0x0D, 0x51,
    0x7F, 0xCF, 0x9C, 0x51, 0x77, 0xB7, 0x0D, 0x51,
    0x52, 0x69, 0x63, 0x68, 0x76, 0xB7, 0x0D, 0x51,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x16, 0x00,
    0x81, 0xA3, 0x02, 0x4E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x02, 0x01,
    0x0B, 0x01, 0x09, 0x00, 0x00, 0x8E, 0x33, 0x00,
    0x00, 0xDE, 0x0B, 0x00, 0x00, 0x28, 0x00, 0x00,
    0xF0, 0x64, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x40, 0x11, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x06, 0x00, 0x01, 0x00, 0x06, 0x00, 0x01, 0x00,
    0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x40, 0x00, 0x00, 0x08, 0x00, 0x00,
    0x50, 0x09, 0x3C, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x04, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x60, 0x34, 0x00, 0x77, 0x12, 0x01, 0x00,
    0x48, 0x2B, 0x3B, 0x00, 0x8C, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x3B, 0x00, 0x10, 0x45, 0x03, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x98, 0x3B, 0x00, 0x80, 0x1B, 0x00, 0x00,
    0x00, 0x90, 0x3E, 0x00, 0x38, 0x90, 0x01, 0x00,
    0xC0, 0x5D, 0x11, 0x00, 0x38, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x35, 0x0C, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x6C, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00,
    0x21, 0x4E, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x50, 0x11, 0x00, 0x00, 0x08, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x68,
    0x5F, 0x50, 0x41, 0x47, 0x45, 0x4C, 0x4B, 0x00,
    0xB1, 0x08, 0x00, 0x00, 0x00, 0x60, 0x11, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x00, 0x58, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x68,
    0x50, 0x4F, 0x4F, 0x4C, 0x4D, 0x49, 0x00, 0x00,
    0x47, 0x09, 0x00, 0x00, 0x00, 0x70, 0x11, 0x00,
    0x00, 0x0A, 0x00, 0x00, 0x00, 0x62, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x68,
    0x50, 0x4F, 0x4F, 0x4C, 0x43, 0x4F, 0x44, 0x45,
    0xF7, 0x19, 0x00, 0x00, 0x00, 0x80, 0x11, 0x00,
    0x00, 0x1A, 0x00, 0x00, 0x00, 0x6C, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x68,
    0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00,
    0x0C, 0x4D, 0x04, 0x00, 0x00, 0xA0, 0x11, 0x00,
    0x00, 0x8C, 0x00, 0x00, 0x00, 0x86, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC8,
    0x41, 0x4C, 0x4D, 0x4F, 0x53, 0x54, 0x52, 0x4F,
    0x50, 0x0C, 0x00, 0x00, 0x00, 0xF0, 0x15, 0x00,
    0x00, 0x0E, 0x00, 0x00, 0x00, 0x12, 0x12, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC8,
    0x53, 0x50, 0x49, 0x4E, 0x4C, 0x4F, 0x43, 0x4B,
    0xC4, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x12, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC8,
    0x50, 0x41, 0x47, 0x45, 0x00, 0x00, 0x00, 0x00,
    0xEC, 0xBA, 0x1A, 0x00, 0x00, 0x20, 0x16, 0x00,
    0x00, 0xBC, 0x1A, 0x00, 0x00, 0x24, 0x12, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x4C, 0x4B, 0x00, 0x00,
    0xE1, 0x11, 0x01, 0x00, 0x00, 0xE0, 0x30, 0x00,
    0x00, 0x12, 0x01, 0x00, 0x00, 0xE0, 0x2C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x4B, 0x44, 0x00, 0x00,
    0xDB, 0x46, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00,
    0x00, 0x48, 0x00, 0x00, 0x00, 0xF2, 0x2D, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x56, 0x52, 0x46, 0x59,
    0x01, 0x6F, 0x01, 0x00, 0x00, 0x50, 0x32, 0x00,
    0x00, 0x70, 0x01, 0x00, 0x00, 0x3A, 0x2E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x48, 0x44, 0x4C, 0x53,
    0x9A, 0x1D, 0x00, 0x00, 0x00, 0xC0, 0x33, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0x00, 0xAA, 0x2F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x42, 0x47, 0x46, 0x58,
    0xB5, 0x4C, 0x00, 0x00, 0x00, 0xE0, 0x33, 0x00,
    0x00, 0x4E, 0x00, 0x00, 0x00, 0xC8, 0x2F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x50, 0x41, 0x47, 0x45, 0x56, 0x52, 0x46, 0x42,
    0x48, 0x26, 0x00, 0x00, 0x00, 0x30, 0x34, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xC0,
    0x2E, 0x65, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00,
    0x77, 0x12, 0x01, 0x00, 0x00, 0x60, 0x34, 0x00,
    0x00, 0x14, 0x01, 0x00, 0x00, 0x16, 0x30, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40,
    0x50, 0x41, 0x47, 0x45, 0x44, 0x41, 0x54, 0x41,
    0x7C, 0x84, 0x00, 0x00, 0x00, 0x80, 0x35, 0x00,
    0x00, 0x84, 0x00, 0x00, 0x00, 0x2A, 0x31, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x50, 0x41, 0x47, 0x45, 0x4B, 0x44, 0x44, 0x00,
    0x19, 0xC0, 0x00, 0x00, 0x00, 0x10, 0x36, 0x00,
    0x00, 0xC2, 0x00, 0x00, 0x00, 0xAE, 0x31, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x50, 0x41, 0x47, 0x45, 0x56, 0x52, 0x46, 0x43,
    0x76, 0x25, 0x00, 0x00, 0x00, 0xE0, 0x36, 0x00,
    0x00, 0x26, 0x00, 0x00, 0x00, 0x70, 0x32, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40,
    0x50, 0x41, 0x47, 0x45, 0x56, 0x52, 0x46, 0x44,
    0x18, 0x0B, 0x00, 0x00, 0x00, 0x10, 0x37, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x00, 0x96, 0x32, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x49, 0x4E, 0x49, 0x54, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x1C, 0x04, 0x00, 0x00, 0x20, 0x37, 0x00,
    0x00, 0x1E, 0x04, 0x00, 0x00, 0xA2, 0x32, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0xE2,
    0x2E, 0x72, 0x73, 0x72, 0x63, 0x00, 0x00, 0x00,
    0x10, 0x45, 0x03, 0x00, 0x00, 0x40, 0x3B, 0x00,
    0x00, 0x46, 0x03, 0x00, 0x00, 0xC0, 0x36, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40,
    0x2E, 0x72, 0x65, 0x6C, 0x6F, 0x63, 0x00, 0x00,
    0x38, 0x90, 0x01, 0x00, 0x00, 0x90, 0x3E, 0x00,
    0x00, 0x92, 0x01, 0x00, 0x00, 0x06, 0x3A, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x42,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const size_t szWith22SectionsImg32 = 
    sizeof(with22SectionsImg32) / sizeof(with22SectionsImg32[0]);


static uint8_t incompleteNTHeaders[] = {
    0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00,
    0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD,
    0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68,
    0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72,
    0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E,
    0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20,
    0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A,
    0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x4B, 0x9E, 0x5B, 0xE7, 0x0F, 0xFF, 0x35, 0xB4,
    0x0F, 0xFF, 0x35, 0xB4, 0x0F, 0xFF, 0x35, 0xB4,
    0x11, 0xAD, 0xB6, 0xB4, 0x1C, 0xFF, 0x35, 0xB4,
    0x11, 0xAD, 0xA6, 0xB4, 0x0A, 0xFF, 0x35, 0xB4,
    0x28, 0x39, 0x4E, 0xB4, 0x0D, 0xFF, 0x35, 0xB4,
    0x0F, 0xFF, 0x34, 0xB4, 0x35, 0xFF, 0x35, 0xB4,
    0x11, 0xAD, 0xB1, 0xB4, 0x07, 0xFF, 0x35, 0xB4,
    0x11, 0xAD, 0xA1, 0xB4, 0x0E, 0xFF, 0x35, 0xB4,
    0x11, 0xAD, 0xA4, 0xB4, 0x0E, 0xFF, 0x35, 0xB4,
    0x52, 0x69, 0x63, 0x68, 0x0F, 0xFF, 0x35, 0xB4,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x07, 0x00,
    0xD7, 0x15, 0x51, 0x4E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x02, 0x01,
    0x0B, 0x01, 0x09, 0x00, 0x00, 0x48, 0x00, 0x00,
    0x00, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x11, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xC0, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x40, 0x81,
    0x00
};
static const size_t szIncompleteNTHeaders = 
    sizeof(incompleteNTHeaders) / sizeof(incompleteNTHeaders[0]);


static uint8_t incorrectNTSignature[] = {
    0x4D, 0x5A, 0xDA, 0xDA, 0xDA, 0xDA, 0x4C, 0x01,
    0x03, 0x00, 0xB3, 0xDA, 0x5B, 0x4A, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x02, 0x21, 0x0B, 0x01, 0x09, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x40, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00,
    0x01, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x4D, 0xDC, 0x00, 0x00, 0x02, 0x00,
    0x40, 0x05, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0xE4, 0x10, 0x00, 0x00, 0x9C, 0x00,
    0x00, 0x00, 0xF8, 0x14, 0x00, 0x00, 0x50, 0x00,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0xE8, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x20, 0x00,
    0x00, 0x00, 0xF0, 0x15, 0x00, 0x00, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x4C, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00
};
static const size_t szIncorrectNTSignature = 
    sizeof(incorrectNTSignature) / sizeof(incorrectNTSignature[0]);


static uint8_t incorrectOptionalHeaderMagic64[] = {
    0x4D, 0x5A, 0x50, 0x45, 0x00, 0x00, 0x64, 0x86,
    0x04, 0x00, 0xF1, 0xE2, 0x49, 0x4D, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x22, 0x20, 0xDA, 0xDA, 0x0A, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0xD2, 0x81, 0x00, 0x00, 0x02, 0x00,
    0x40, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0xC0, 0x1D, 0x00, 0x00, 0x9A, 0x00,
    0x00, 0x00, 0x78, 0x1C, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xE8, 0x03,
    0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x60, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00
};
static const size_t szIncorrectOptionalHeaderMagic64 = 
    sizeof(incorrectOptionalHeaderMagic64) / sizeof(incorrectOptionalHeaderMagic64[0]);


static uint8_t incorrectOptionalHeaderMagic32[] = {
    0x4D, 0x5A, 0x50, 0x45, 0x00, 0x00, 0x4C, 0x01,
    0x03, 0x00, 0xB3, 0xDA, 0x5B, 0x4A, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x02, 0x21, 0xDA, 0xDA, 0x09, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x40, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00,
    0x01, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04,
    0x00, 0x00, 0x4D, 0xDC, 0x00, 0x00, 0x02, 0x00,
    0x40, 0x05, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x00, 0xE4, 0x10, 0x00, 0x00, 0x9C, 0x00,
    0x00, 0x00, 0xF8, 0x14, 0x00, 0x00, 0x50, 0x00,
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0xE8, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x20, 0x00,
    0x00, 0x00, 0xF0, 0x15, 0x00, 0x00, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x48, 0x02, 0x00, 0x00, 0x4C, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x24, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00
};
static const size_t szIncorrectOptionalHeaderMagic32 = 
    sizeof(incorrectOptionalHeaderMagic32) / sizeof(incorrectOptionalHeaderMagic32[0]);


static uint8_t incorrectDosSignature[] = {
    0xDA, 0xDA, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C,
    0x33, 0x32, 0x2E, 0x44, 0x4C, 0x4C, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x03, 0x00,
    0xBE, 0xB0, 0x11, 0x40, 0x00, 0xAD, 0x50, 0xFF,
    0x76, 0x34, 0xEB, 0x7C, 0x48, 0x01, 0x03, 0x01,
    0x0B, 0x01, 0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69,
    0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x00, 0x00,
    0x18, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
};
static const size_t szIncorrectDosSignature = 
    sizeof(incorrectDosSignature) / sizeof(incorrectDosSignature[0]);


static uint8_t whenOneBoundHeader[] = {
  0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
  0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 
  0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD, 
  0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68, 
  0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 
  0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F, 
  0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E, 
  0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20, 
  0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A, 
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xBD, 0x1F, 0xAA, 0xC9, 0xF9, 0x7E, 0xC4, 0x9A, 
  0xF9, 0x7E, 0xC4, 0x9A, 0xF9, 0x7E, 0xC4, 0x9A, 
  0x7A, 0x62, 0xCA, 0x9A, 0xF8, 0x7E, 0xC4, 0x9A, 
  0x90, 0x61, 0xCD, 0x9A, 0xF0, 0x7E, 0xC4, 0x9A, 
  0x10, 0x61, 0xC9, 0x9A, 0xF8, 0x7E, 0xC4, 0x9A, 
  0x52, 0x69, 0x63, 0x68, 0xF9, 0x7E, 0xC4, 0x9A, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x03, 0x00, 
  0xE2, 0xF2, 0xA7, 0x45, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0F, 0x01, 
  0x0B, 0x01, 0x06, 0x00, 0x00, 0x50, 0x01, 0x00, 
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xA8, 0x18, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x60, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x9D, 0x03, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xB4, 0x51, 0x01, 0x00, 0x28, 0x00, 0x00, 0x00, 
  0x00, 0x70, 0x01, 0x00, 0xB8, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x38, 0x02, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0xA8, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00, 
  0x34, 0x49, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x50, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 
  0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00, 
  0xD0, 0x0F, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0, 
  0x2E, 0x72, 0x73, 0x72, 0x63, 0x00, 0x00, 0x00, 
  0xB8, 0x08, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 
  0x50, 0x97, 0x10, 0x41, 0x10, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x4D, 0x53, 0x56, 0x42, 0x56, 0x4D, 0x36, 0x30, 
  0x2E, 0x44, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const size_t szWhenOneBoundHeader = 
    sizeof(whenOneBoundHeader) / sizeof(whenOneBoundHeader[0]);


static uint8_t incompleteSectionHeaders32[] = {
    0x4D, 0x5A, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C,
    0x33, 0x32, 0x2E, 0x44, 0x4C, 0x4C, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x03, 0x00,
    0xBE, 0xB0, 0x11, 0x40, 0x00, 0xAD, 0x50, 0xFF,
    0x76, 0x34, 0xEB, 0x7C, 0x48, 0x01, 0x03, 0x01,
    0x0B, 0x01, 0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69,
    0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x00, 0x00,
    0x18, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xC0, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x80,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xEE, 0xB1, 0x03, 0x00, 0x14, 0x00, 0x00, 0x00,
    0x00, 0x90, 0x02, 0x00, 0xF2, 0x0F, 0x00, 0x00,
    0xFF, 0x76, 0x38, 0xAD, 0x50, 0x8B, 0x3E, 0xBE,
    0xF0, 0xB0, 0x43, 0x00, 0x6A, 0x27, 0x59, 0xF3,
    0xA5, 0xFF, 0x76, 0x04, 0x83, 0xC8, 0xFF, 0x8B,
    0xDF, 0xAB, 0xEB, 0x1C, 0x00, 0x00, 0x00, 0x00,
    0x47, 0x65, 0x74, 0x50, 0x72, 0x6F, 0x63, 0x41,
    0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0xAB, 0x40, 0xB1, 0x04, 0xF3, 0xAB, 0xC1,
    0xE0, 0x0A, 0xB5, 0x1C, 0xF3, 0xAB, 0x8B, 0x7E,
    0x0C, 0x57, 0x51, 0xE9, 0xF7, 0x26, 0x03, 0x00,
    0x56, 0x10, 0xE2, 0xE3, 0xB1, 0x04, 0xD3, 0xE0,
    0x03, 0xE8, 0x8D, 0x53, 0x18, 0x33, 0xC0, 0x55,
    0x40, 0x51, 0xD3, 0xE0, 0x8B, 0xEA, 0x91, 0xFF,
    0x56, 0x4C, 0x99, 0x59, 0xD1, 0xE8, 0x13, 0xD2,
    0xE2, 0xFA, 0x5D, 0x03, 0xEA, 0x45, 0x59, 0x89,
    0x6B, 0x08, 0x56, 0x8B, 0xF7, 0x2B, 0xF5, 0xF3,
    0xA4, 0xAC, 0x5E, 0xB1, 0x80, 0xAA, 0x3B, 0x7E,
    0x34, 0x0F, 0x82, 0xAC, 0xFE, 0xFF, 0xFF, 0x58,
    0x5F, 0x59, 0xE3, 0x1B, 0x8A, 0x07, 0x47, 0x04,
    0x18, 0x3C, 0x02, 0x73, 0xF7, 0x8B, 0x07, 0x3C,
    0x05, 0x75, 0xF3, 0xB0, 0x00, 0x0F, 0xC8, 0x03,
    0x46, 0x38, 0x2B, 0xC7, 0xAB, 0xE2, 0xE5, 0x5E,
    0x5D, 0x59, 0x46, 0xAD, 0x85, 0xC0, 0x74, 0x1F,
    0x51, 0x56, 0x97, 0xFF, 0xD1, 0x93, 0xAC, 0x84,
    0xC0, 0x75, 0xFB, 0x38, 0x06, 0x74, 0xEA, 0x8B,
    0xC6, 0x79, 0x05, 0x46, 0x33, 0xC0, 0x66, 0xAD,
    0x50, 0x53, 0xFF, 0xD5, 0xAB, 0xEB, 0xE7, 0xC3,
    0x00, 0x80, 0x02, 0x00, 0x00, 0x10, 0x00, 0x00,
    0xF0, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0xF2, 0x9F, 0x42, 0x00, 0x9F, 0x37, 0x43, 0x00,
    0x42, 0x02, 0x00, 0x00, 0x60, 0x00, 0x00, 0xE0,
    0x00, 0x10, 0x40, 0x00, 0xD4, 0x37, 0x43, 0x00,
    0x00, 0x20, 0x01, 0x00, 0x00, 0x90, 0x02, 0x00,
    0xFC, 0xA8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0xF0, 0xA2, 0x40, 0x00, 0xFF, 0x7F, 0x42, 0x00,
    0xFC, 0x38, 0x43, 0x00, 0x60, 0x00, 0x00, 0xE0,
    0x05, 0x84, 0x42, 0x00, 0xFC, 0x0F, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0xB0, 0x03, 0x00,
    0xF0, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x6C, 0x37, 0x43, 0x00, 0x6F, 0x37, 0x43, 0x00,
    0x7E, 0x37, 0x43, 0x00, 0x60, 0x00, 0x00
};
static const size_t szIncompleteSectionHeaders32 = 
    sizeof(incompleteSectionHeaders32) / sizeof(incompleteSectionHeaders32[0]);


static uint8_t incompleteSectionHeaders64[] = {
    0x4D, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x64, 0x86, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x02, 0x01,
    0x0B, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x20, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const size_t szIncompleteSectionHeaders64 = 
    sizeof(incompleteSectionHeaders64) / sizeof(incompleteSectionHeaders64[0]);


static uint8_t withSectionHeadersOnly64[] = {
    0x4D, 0x5A, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x10, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD,
    0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68,
    0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72,
    0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E,
    0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20,
    0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0A, 0x24,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x64, 0x86, 0x03, 0x00,
    0x12, 0xAD, 0x0B, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x2F, 0x00,
    0x0B, 0x02, 0x01, 0x46, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0xC8, 0xE9, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00,
    0x04, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00,
    0x28, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0
};
static const size_t szWithSectionHeadersOnly64 = 
    sizeof(withSectionHeadersOnly64) / sizeof(withSectionHeadersOnly64[0]);


static uint8_t withSectionHeadersOnly32[] = {
    0x4D, 0x5A, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x10, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD,
    0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68,
    0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72,
    0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E,
    0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20,
    0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0A, 0x24,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x45, 0x00, 0x00, 0x4C, 0x01, 0x04, 0x00,
    0xDB, 0xAC, 0x0B, 0x53, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x01,
    0x0B, 0x01, 0x01, 0x46, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x50, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x3E, 0x01, 0x01, 0x00, 0x02, 0x00, 0x40, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00,
    0x04, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60,
    0x2E, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00, 0x00,
    0x28, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x2E, 0x69, 0x64, 0x61, 0x74, 0x61, 0x00, 0x00,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xC0,
    0x2E, 0x72, 0x65, 0x6C, 0x6F, 0x63, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x42
};
static const size_t szWithSectionHeadersOnly32 = 
    sizeof(withSectionHeadersOnly32) / sizeof(withSectionHeadersOnly32[0]);


namespace Test
{

// TestData::TestData()
// {
// }

TestData::TestData(const uint8_t* ptr_, size_t size_)
    : ptr(ptr_)
    , size(size_)
{
}

TestDataHolder& TestDataHolder::getInstance()
{
    static TestDataHolder result;
    return result;
}

const TestData& TestDataHolder::get(const std::string& name)
{
    return dataStorage[name];
}

TestDataHolder::TestDataHolder()
{
    TestDataHolder::TestDataStorage_t tmp = {
        { "with22SectionsImg32", TestData(with22SectionsImg32, szWith22SectionsImg32) },
        { "incompleteDosHeader", TestData(incompleteDosHeader, szIncompleteDosHeader) },
        { "incompleteNTHeaders", TestData(incompleteNTHeaders, szIncompleteNTHeaders) },
        { "incorrectNTSignature", TestData(incorrectNTSignature, szIncorrectNTSignature) },
        { "incorrectOptionalHeaderMagic32", TestData(incorrectOptionalHeaderMagic32, szIncorrectOptionalHeaderMagic32) },
        { "incorrectOptionalHeaderMagic64", TestData(incorrectOptionalHeaderMagic64, szIncorrectOptionalHeaderMagic64) },
        { "incorrectDosSignature", TestData(incorrectDosSignature, szIncorrectDosSignature) },
        { "whenOneBoundHeader", TestData(whenOneBoundHeader, szWhenOneBoundHeader) },
        { "incompleteSectionHeaders32", TestData(incompleteSectionHeaders32, szIncompleteSectionHeaders32) },
        { "incompleteSectionHeaders64", TestData(incompleteSectionHeaders64, szIncompleteSectionHeaders64) },
        { "withSectionHeadersOnly32", TestData(withSectionHeadersOnly32, szWithSectionHeadersOnly32) },
        { "withSectionHeadersOnly64", TestData(withSectionHeadersOnly64, szWithSectionHeadersOnly64) },
    };
    dataStorage = std::move(tmp);
}

} // namespace Test
